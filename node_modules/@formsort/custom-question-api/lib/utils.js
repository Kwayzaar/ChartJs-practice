"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getValueFromWindowParent = exports.sendMessageToWindowParent = exports.getEmitter = void 0;
const tslib_1 = require("tslib");
const WindowMessageEmitter_1 = tslib_1.__importDefault(require("./WindowMessageEmitter"));
let emitterSingleton;
const getEmitter = () => {
    if (!emitterSingleton) {
        emitterSingleton = new WindowMessageEmitter_1.default();
    }
    return emitterSingleton;
};
exports.getEmitter = getEmitter;
const sendMessageToWindowParent = (type, payload, requestId) => {
    if (window.location === window.parent.location) {
        throw new Error('Custom questions must run within a Formsort flow custom question to work.');
    }
    window.parent.postMessage({
        type,
        payload,
        requestId,
    }, '*');
};
exports.sendMessageToWindowParent = sendMessageToWindowParent;
const getValueFromWindowParent = (requestEventType, responseEventType, requestPayload) => {
    const requestId = Math.random().toString();
    return new Promise((resolve) => {
        const onMessage = (value, returningRequestId) => {
            if (requestId === returningRequestId) {
                resolve(value); // eslint-disable-line @typescript-eslint/no-unsafe-argument
                (0, exports.getEmitter)().removeListener(responseEventType, onMessage);
            }
        };
        (0, exports.getEmitter)().on(responseEventType, onMessage);
        (0, exports.sendMessageToWindowParent)(requestEventType, requestPayload, requestId);
    });
};
exports.getValueFromWindowParent = getValueFromWindowParent;
