{
  "version": 3,
  "sources": ["../build/_snowpack/pkg/common/color.esm-52a07313.js", "../build/_snowpack/pkg/chartjs/auto.js", "../build/_snowpack/pkg/common/_commonjsHelpers-8c19dec8.js", "../build/_snowpack/pkg/common/index-42f7c345.js", "../build/_snowpack/pkg/common/events-7e6d7f3c.js", "../build/_snowpack/pkg/@formsort/custom-question-api.js", "../build/data.js"],
  "sourcesContent": ["/*!\n * @kurkle/color v0.3.2\n * https://github.com/kurkle/color#readme\n * (c) 2023 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n  x: 'dark',\n  Z: 'light',\n  Y: 're',\n  X: 'blu',\n  W: 'gr',\n  V: 'medium',\n  U: 'slate',\n  A: 'ee',\n  T: 'ol',\n  S: 'or',\n  B: 'ra',\n  C: 'lateg',\n  D: 'ights',\n  R: 'in',\n  Q: 'turquois',\n  E: 'hi',\n  P: 'ro',\n  O: 'al',\n  N: 'le',\n  M: 'de',\n  L: 'yello',\n  F: 'en',\n  K: 'ch',\n  G: 'arks',\n  H: 'ea',\n  I: 'ightg',\n  J: 'wh'\n};\nconst names$1 = {\n  OiceXe: 'f0f8ff',\n  antiquewEte: 'faebd7',\n  aqua: 'ffff',\n  aquamarRe: '7fffd4',\n  azuY: 'f0ffff',\n  beige: 'f5f5dc',\n  bisque: 'ffe4c4',\n  black: '0',\n  blanKedOmond: 'ffebcd',\n  Xe: 'ff',\n  XeviTet: '8a2be2',\n  bPwn: 'a52a2a',\n  burlywood: 'deb887',\n  caMtXe: '5f9ea0',\n  KartYuse: '7fff00',\n  KocTate: 'd2691e',\n  cSO: 'ff7f50',\n  cSnflowerXe: '6495ed',\n  cSnsilk: 'fff8dc',\n  crimson: 'dc143c',\n  cyan: 'ffff',\n  xXe: '8b',\n  xcyan: '8b8b',\n  xgTMnPd: 'b8860b',\n  xWay: 'a9a9a9',\n  xgYF: '6400',\n  xgYy: 'a9a9a9',\n  xkhaki: 'bdb76b',\n  xmagFta: '8b008b',\n  xTivegYF: '556b2f',\n  xSange: 'ff8c00',\n  xScEd: '9932cc',\n  xYd: '8b0000',\n  xsOmon: 'e9967a',\n  xsHgYF: '8fbc8f',\n  xUXe: '483d8b',\n  xUWay: '2f4f4f',\n  xUgYy: '2f4f4f',\n  xQe: 'ced1',\n  xviTet: '9400d3',\n  dAppRk: 'ff1493',\n  dApskyXe: 'bfff',\n  dimWay: '696969',\n  dimgYy: '696969',\n  dodgerXe: '1e90ff',\n  fiYbrick: 'b22222',\n  flSOwEte: 'fffaf0',\n  foYstWAn: '228b22',\n  fuKsia: 'ff00ff',\n  gaRsbSo: 'dcdcdc',\n  ghostwEte: 'f8f8ff',\n  gTd: 'ffd700',\n  gTMnPd: 'daa520',\n  Way: '808080',\n  gYF: '8000',\n  gYFLw: 'adff2f',\n  gYy: '808080',\n  honeyMw: 'f0fff0',\n  hotpRk: 'ff69b4',\n  RdianYd: 'cd5c5c',\n  Rdigo: '4b0082',\n  ivSy: 'fffff0',\n  khaki: 'f0e68c',\n  lavFMr: 'e6e6fa',\n  lavFMrXsh: 'fff0f5',\n  lawngYF: '7cfc00',\n  NmoncEffon: 'fffacd',\n  ZXe: 'add8e6',\n  ZcSO: 'f08080',\n  Zcyan: 'e0ffff',\n  ZgTMnPdLw: 'fafad2',\n  ZWay: 'd3d3d3',\n  ZgYF: '90ee90',\n  ZgYy: 'd3d3d3',\n  ZpRk: 'ffb6c1',\n  ZsOmon: 'ffa07a',\n  ZsHgYF: '20b2aa',\n  ZskyXe: '87cefa',\n  ZUWay: '778899',\n  ZUgYy: '778899',\n  ZstAlXe: 'b0c4de',\n  ZLw: 'ffffe0',\n  lime: 'ff00',\n  limegYF: '32cd32',\n  lRF: 'faf0e6',\n  magFta: 'ff00ff',\n  maPon: '800000',\n  VaquamarRe: '66cdaa',\n  VXe: 'cd',\n  VScEd: 'ba55d3',\n  VpurpN: '9370db',\n  VsHgYF: '3cb371',\n  VUXe: '7b68ee',\n  VsprRggYF: 'fa9a',\n  VQe: '48d1cc',\n  VviTetYd: 'c71585',\n  midnightXe: '191970',\n  mRtcYam: 'f5fffa',\n  mistyPse: 'ffe4e1',\n  moccasR: 'ffe4b5',\n  navajowEte: 'ffdead',\n  navy: '80',\n  Tdlace: 'fdf5e6',\n  Tive: '808000',\n  TivedBb: '6b8e23',\n  Sange: 'ffa500',\n  SangeYd: 'ff4500',\n  ScEd: 'da70d6',\n  pOegTMnPd: 'eee8aa',\n  pOegYF: '98fb98',\n  pOeQe: 'afeeee',\n  pOeviTetYd: 'db7093',\n  papayawEp: 'ffefd5',\n  pHKpuff: 'ffdab9',\n  peru: 'cd853f',\n  pRk: 'ffc0cb',\n  plum: 'dda0dd',\n  powMrXe: 'b0e0e6',\n  purpN: '800080',\n  YbeccapurpN: '663399',\n  Yd: 'ff0000',\n  Psybrown: 'bc8f8f',\n  PyOXe: '4169e1',\n  saddNbPwn: '8b4513',\n  sOmon: 'fa8072',\n  sandybPwn: 'f4a460',\n  sHgYF: '2e8b57',\n  sHshell: 'fff5ee',\n  siFna: 'a0522d',\n  silver: 'c0c0c0',\n  skyXe: '87ceeb',\n  UXe: '6a5acd',\n  UWay: '708090',\n  UgYy: '708090',\n  snow: 'fffafa',\n  sprRggYF: 'ff7f',\n  stAlXe: '4682b4',\n  tan: 'd2b48c',\n  teO: '8080',\n  tEstN: 'd8bfd8',\n  tomato: 'ff6347',\n  Qe: '40e0d0',\n  viTet: 'ee82ee',\n  JHt: 'f5deb3',\n  wEte: 'ffffff',\n  wEtesmoke: 'f5f5f5',\n  Lw: 'ffff00',\n  LwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nexport { Color as C };\n", "import { C as Color } from '../common/color.esm-52a07313.js';\n\n/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || typeof value === 'undefined';\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\nfunction isNumber(n) {\n    return !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , _parsed  } = meta;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = _limitValue(Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo), 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            count = _limitValue(Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1), start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * Note: typedefs are auto-exported, so use a made-up `dom` namespace where\n * necessary to avoid duplicates with `export * from './helpers`; see\n * https://github.com/microsoft/TypeScript/issues/46011\n * @typedef { import('../core/core.controller.js').default } dom.Chart\n * @typedef { import('../../types').ChartEvent } ChartEvent\n */ /**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\n/*!\n * Chart.js v4.4.6\n * https://www.chartjs.org\n * (c) 2024 Chart.js Contributors\n * Released under the MIT License\n */\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            return lookupMethod(data, axis, value);\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.6\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const clip = meta._clip;\n        const useClip = !clip.disabled;\n        const area = getDatasetArea(meta, this.chartArea);\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (useClip) {\n            clipArea(ctx, {\n                left: clip.left === false ? 0 : area.left - clip.left,\n                right: clip.right === false ? this.width : area.right + clip.right,\n                top: clip.top === false ? 0 : area.top - clip.top,\n                bottom: clip.bottom === false ? this.height : area.bottom + clip.bottom\n            });\n        }\n        meta.controller.draw();\n        if (useClip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, bounds) {\n    const { top , bottom  } = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x') {\n        ctx.beginPath();\n        ctx.rect(start, top, end - start, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value,  parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nChart.register(...registerables);\n\nexport default Chart;\n", "var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction createCommonjsModule(fn, basedir, module) {\n\treturn module = {\n\t\tpath: basedir,\n\t\texports: {},\n\t\trequire: function (path, base) {\n\t\t\treturn commonjsRequire(path, (base === undefined || base === null) ? module.path : base);\n\t\t}\n\t}, fn(module, module.exports), module.exports;\n}\n\nfunction commonjsRequire () {\n\tthrow new Error('Dynamic requires are not currently supported by @rollup/plugin-commonjs');\n}\n\nexport { commonjsGlobal as a, createCommonjsModule as c, getDefaultExportFromCjs as g };\n", "import { g as getDefaultExportFromCjs, c as createCommonjsModule } from './_commonjsHelpers-8c19dec8.js';\n\nvar customQuestionMessage = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nvar CustomQuestionMessage;\n(function (CustomQuestionMessage) {\n    CustomQuestionMessage[\"SET_QUESTION_SIZE_MSG\"] = \"\\u0192_sqz\";\n    CustomQuestionMessage[\"REQUEST_ANSWER_VALUE_MSG\"] = \"\\u0192_rav\";\n    CustomQuestionMessage[\"SET_ANSWER_VALUE_MSG\"] = \"\\u0192_sav\";\n    CustomQuestionMessage[\"REQUEST_SEMANTIC_ANSWER_VALUE_MSG\"] = \"\\u0192_rsv\";\n    CustomQuestionMessage[\"SET_SEMANTIC_ANSWER_VALUE_MSG\"] = \"\\u0192_ssv\";\n    CustomQuestionMessage[\"REQUEST_ANSWERS_MSG\"] = \"\\u0192_ra\";\n    CustomQuestionMessage[\"SET_ANSWERS_MSG\"] = \"\\u0192_sa\";\n    CustomQuestionMessage[\"REQUEST_RESPONDER_UUID_MSG\"] = \"\\u0192_rru\";\n    CustomQuestionMessage[\"SET_RESPONDER_UUID_MSG\"] = \"\\u0192_sru\";\n    CustomQuestionMessage[\"CLEAR_ANSWER_VALUE_MSG\"] = \"\\u0192_cav\";\n    CustomQuestionMessage[\"SET_DISABLE_BACK_NAVIGATION_MSG\"] = \"\\u0192_sdbn\";\n})(CustomQuestionMessage || (CustomQuestionMessage = {}));\nexports.default = CustomQuestionMessage;\n});\n\nvar index = /*@__PURE__*/getDefaultExportFromCjs(customQuestionMessage);\n\nexport { customQuestionMessage as c, index as i };\n", "// Copyright Joyent, Inc. and other Node contributors.\n\nvar R = typeof Reflect === 'object' ? Reflect : null;\nvar ReflectApply = R && typeof R.apply === 'function'\n  ? R.apply\n  : function ReflectApply(target, receiver, args) {\n    return Function.prototype.apply.call(target, receiver, args);\n  };\n\nvar ReflectOwnKeys;\nif (R && typeof R.ownKeys === 'function') {\n  ReflectOwnKeys = R.ownKeys;\n} else if (Object.getOwnPropertySymbols) {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target)\n      .concat(Object.getOwnPropertySymbols(target));\n  };\n} else {\n  ReflectOwnKeys = function ReflectOwnKeys(target) {\n    return Object.getOwnPropertyNames(target);\n  };\n}\n\nfunction ProcessEmitWarning(warning) {\n  if (console && console.warn) console.warn(warning);\n}\n\nvar NumberIsNaN = Number.isNaN || function NumberIsNaN(value) {\n  return value !== value;\n};\n\nfunction EventEmitter() {\n  EventEmitter.init.call(this);\n}\nvar events = EventEmitter;\nvar once_1 = once;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._eventsCount = 0;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nvar defaultMaxListeners = 10;\n\nfunction checkListener(listener) {\n  if (typeof listener !== 'function') {\n    throw new TypeError('The \"listener\" argument must be of type Function. Received type ' + typeof listener);\n  }\n}\n\nObject.defineProperty(EventEmitter, 'defaultMaxListeners', {\n  enumerable: true,\n  get: function() {\n    return defaultMaxListeners;\n  },\n  set: function(arg) {\n    if (typeof arg !== 'number' || arg < 0 || NumberIsNaN(arg)) {\n      throw new RangeError('The value of \"defaultMaxListeners\" is out of range. It must be a non-negative number. Received ' + arg + '.');\n    }\n    defaultMaxListeners = arg;\n  }\n});\n\nEventEmitter.init = function() {\n\n  if (this._events === undefined ||\n      this._events === Object.getPrototypeOf(this)._events) {\n    this._events = Object.create(null);\n    this._eventsCount = 0;\n  }\n\n  this._maxListeners = this._maxListeners || undefined;\n};\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function setMaxListeners(n) {\n  if (typeof n !== 'number' || n < 0 || NumberIsNaN(n)) {\n    throw new RangeError('The value of \"n\" is out of range. It must be a non-negative number. Received ' + n + '.');\n  }\n  this._maxListeners = n;\n  return this;\n};\n\nfunction _getMaxListeners(that) {\n  if (that._maxListeners === undefined)\n    return EventEmitter.defaultMaxListeners;\n  return that._maxListeners;\n}\n\nEventEmitter.prototype.getMaxListeners = function getMaxListeners() {\n  return _getMaxListeners(this);\n};\n\nEventEmitter.prototype.emit = function emit(type) {\n  var args = [];\n  for (var i = 1; i < arguments.length; i++) args.push(arguments[i]);\n  var doError = (type === 'error');\n\n  var events = this._events;\n  if (events !== undefined)\n    doError = (doError && events.error === undefined);\n  else if (!doError)\n    return false;\n\n  // If there is no 'error' event listener then throw.\n  if (doError) {\n    var er;\n    if (args.length > 0)\n      er = args[0];\n    if (er instanceof Error) {\n      // Note: The comments on the `throw` lines are intentional, they show\n      // up in Node's output if this results in an unhandled exception.\n      throw er; // Unhandled 'error' event\n    }\n    // At least give some kind of context to the user\n    var err = new Error('Unhandled error.' + (er ? ' (' + er.message + ')' : ''));\n    err.context = er;\n    throw err; // Unhandled 'error' event\n  }\n\n  var handler = events[type];\n\n  if (handler === undefined)\n    return false;\n\n  if (typeof handler === 'function') {\n    ReflectApply(handler, this, args);\n  } else {\n    var len = handler.length;\n    var listeners = arrayClone(handler, len);\n    for (var i = 0; i < len; ++i)\n      ReflectApply(listeners[i], this, args);\n  }\n\n  return true;\n};\n\nfunction _addListener(target, type, listener, prepend) {\n  var m;\n  var events;\n  var existing;\n\n  checkListener(listener);\n\n  events = target._events;\n  if (events === undefined) {\n    events = target._events = Object.create(null);\n    target._eventsCount = 0;\n  } else {\n    // To avoid recursion in the case that type === \"newListener\"! Before\n    // adding it to the listeners, first emit \"newListener\".\n    if (events.newListener !== undefined) {\n      target.emit('newListener', type,\n                  listener.listener ? listener.listener : listener);\n\n      // Re-assign `events` because a newListener handler could have caused the\n      // this._events to be assigned to a new object\n      events = target._events;\n    }\n    existing = events[type];\n  }\n\n  if (existing === undefined) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    existing = events[type] = listener;\n    ++target._eventsCount;\n  } else {\n    if (typeof existing === 'function') {\n      // Adding the second element, need to change to array.\n      existing = events[type] =\n        prepend ? [listener, existing] : [existing, listener];\n      // If we've already got an array, just append.\n    } else if (prepend) {\n      existing.unshift(listener);\n    } else {\n      existing.push(listener);\n    }\n\n    // Check for listener leak\n    m = _getMaxListeners(target);\n    if (m > 0 && existing.length > m && !existing.warned) {\n      existing.warned = true;\n      // No error code for this since it is a Warning\n      // eslint-disable-next-line no-restricted-syntax\n      var w = new Error('Possible EventEmitter memory leak detected. ' +\n                          existing.length + ' ' + String(type) + ' listeners ' +\n                          'added. Use emitter.setMaxListeners() to ' +\n                          'increase limit');\n      w.name = 'MaxListenersExceededWarning';\n      w.emitter = target;\n      w.type = type;\n      w.count = existing.length;\n      ProcessEmitWarning(w);\n    }\n  }\n\n  return target;\n}\n\nEventEmitter.prototype.addListener = function addListener(type, listener) {\n  return _addListener(this, type, listener, false);\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.prependListener =\n    function prependListener(type, listener) {\n      return _addListener(this, type, listener, true);\n    };\n\nfunction onceWrapper() {\n  if (!this.fired) {\n    this.target.removeListener(this.type, this.wrapFn);\n    this.fired = true;\n    if (arguments.length === 0)\n      return this.listener.call(this.target);\n    return this.listener.apply(this.target, arguments);\n  }\n}\n\nfunction _onceWrap(target, type, listener) {\n  var state = { fired: false, wrapFn: undefined, target: target, type: type, listener: listener };\n  var wrapped = onceWrapper.bind(state);\n  wrapped.listener = listener;\n  state.wrapFn = wrapped;\n  return wrapped;\n}\n\nEventEmitter.prototype.once = function once(type, listener) {\n  checkListener(listener);\n  this.on(type, _onceWrap(this, type, listener));\n  return this;\n};\n\nEventEmitter.prototype.prependOnceListener =\n    function prependOnceListener(type, listener) {\n      checkListener(listener);\n      this.prependListener(type, _onceWrap(this, type, listener));\n      return this;\n    };\n\n// Emits a 'removeListener' event if and only if the listener was removed.\nEventEmitter.prototype.removeListener =\n    function removeListener(type, listener) {\n      var list, events, position, i, originalListener;\n\n      checkListener(listener);\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      list = events[type];\n      if (list === undefined)\n        return this;\n\n      if (list === listener || list.listener === listener) {\n        if (--this._eventsCount === 0)\n          this._events = Object.create(null);\n        else {\n          delete events[type];\n          if (events.removeListener)\n            this.emit('removeListener', type, list.listener || listener);\n        }\n      } else if (typeof list !== 'function') {\n        position = -1;\n\n        for (i = list.length - 1; i >= 0; i--) {\n          if (list[i] === listener || list[i].listener === listener) {\n            originalListener = list[i].listener;\n            position = i;\n            break;\n          }\n        }\n\n        if (position < 0)\n          return this;\n\n        if (position === 0)\n          list.shift();\n        else {\n          spliceOne(list, position);\n        }\n\n        if (list.length === 1)\n          events[type] = list[0];\n\n        if (events.removeListener !== undefined)\n          this.emit('removeListener', type, originalListener || listener);\n      }\n\n      return this;\n    };\n\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\n\nEventEmitter.prototype.removeAllListeners =\n    function removeAllListeners(type) {\n      var listeners, events, i;\n\n      events = this._events;\n      if (events === undefined)\n        return this;\n\n      // not listening for removeListener, no need to emit\n      if (events.removeListener === undefined) {\n        if (arguments.length === 0) {\n          this._events = Object.create(null);\n          this._eventsCount = 0;\n        } else if (events[type] !== undefined) {\n          if (--this._eventsCount === 0)\n            this._events = Object.create(null);\n          else\n            delete events[type];\n        }\n        return this;\n      }\n\n      // emit removeListener for all listeners on all events\n      if (arguments.length === 0) {\n        var keys = Object.keys(events);\n        var key;\n        for (i = 0; i < keys.length; ++i) {\n          key = keys[i];\n          if (key === 'removeListener') continue;\n          this.removeAllListeners(key);\n        }\n        this.removeAllListeners('removeListener');\n        this._events = Object.create(null);\n        this._eventsCount = 0;\n        return this;\n      }\n\n      listeners = events[type];\n\n      if (typeof listeners === 'function') {\n        this.removeListener(type, listeners);\n      } else if (listeners !== undefined) {\n        // LIFO order\n        for (i = listeners.length - 1; i >= 0; i--) {\n          this.removeListener(type, listeners[i]);\n        }\n      }\n\n      return this;\n    };\n\nfunction _listeners(target, type, unwrap) {\n  var events = target._events;\n\n  if (events === undefined)\n    return [];\n\n  var evlistener = events[type];\n  if (evlistener === undefined)\n    return [];\n\n  if (typeof evlistener === 'function')\n    return unwrap ? [evlistener.listener || evlistener] : [evlistener];\n\n  return unwrap ?\n    unwrapListeners(evlistener) : arrayClone(evlistener, evlistener.length);\n}\n\nEventEmitter.prototype.listeners = function listeners(type) {\n  return _listeners(this, type, true);\n};\n\nEventEmitter.prototype.rawListeners = function rawListeners(type) {\n  return _listeners(this, type, false);\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  if (typeof emitter.listenerCount === 'function') {\n    return emitter.listenerCount(type);\n  } else {\n    return listenerCount.call(emitter, type);\n  }\n};\n\nEventEmitter.prototype.listenerCount = listenerCount;\nfunction listenerCount(type) {\n  var events = this._events;\n\n  if (events !== undefined) {\n    var evlistener = events[type];\n\n    if (typeof evlistener === 'function') {\n      return 1;\n    } else if (evlistener !== undefined) {\n      return evlistener.length;\n    }\n  }\n\n  return 0;\n}\n\nEventEmitter.prototype.eventNames = function eventNames() {\n  return this._eventsCount > 0 ? ReflectOwnKeys(this._events) : [];\n};\n\nfunction arrayClone(arr, n) {\n  var copy = new Array(n);\n  for (var i = 0; i < n; ++i)\n    copy[i] = arr[i];\n  return copy;\n}\n\nfunction spliceOne(list, index) {\n  for (; index + 1 < list.length; index++)\n    list[index] = list[index + 1];\n  list.pop();\n}\n\nfunction unwrapListeners(arr) {\n  var ret = new Array(arr.length);\n  for (var i = 0; i < ret.length; ++i) {\n    ret[i] = arr[i].listener || arr[i];\n  }\n  return ret;\n}\n\nfunction once(emitter, name) {\n  return new Promise(function (resolve, reject) {\n    function errorListener(err) {\n      emitter.removeListener(name, resolver);\n      reject(err);\n    }\n\n    function resolver() {\n      if (typeof emitter.removeListener === 'function') {\n        emitter.removeListener('error', errorListener);\n      }\n      resolve([].slice.call(arguments));\n    }\n    eventTargetAgnosticAddListener(emitter, name, resolver, { once: true });\n    if (name !== 'error') {\n      addErrorHandlerIfEventEmitter(emitter, errorListener, { once: true });\n    }\n  });\n}\n\nfunction addErrorHandlerIfEventEmitter(emitter, handler, flags) {\n  if (typeof emitter.on === 'function') {\n    eventTargetAgnosticAddListener(emitter, 'error', handler, flags);\n  }\n}\n\nfunction eventTargetAgnosticAddListener(emitter, name, listener, flags) {\n  if (typeof emitter.on === 'function') {\n    if (flags.once) {\n      emitter.once(name, listener);\n    } else {\n      emitter.on(name, listener);\n    }\n  } else if (typeof emitter.addEventListener === 'function') {\n    // EventTarget does not have `error` event semantics like Node\n    // EventEmitters, we do not listen for `error` events here.\n    emitter.addEventListener(name, function wrapListener(arg) {\n      // IE does not have builtin `{ once: true }` support so we\n      // have to do it manually.\n      if (flags.once) {\n        emitter.removeEventListener(name, wrapListener);\n      }\n      listener(arg);\n    });\n  } else {\n    throw new TypeError('The \"emitter\" argument must be of type EventEmitter. Received type ' + typeof emitter);\n  }\n}\nevents.once = once_1;\n\nexport { events as e };\n", "import { c as createCommonjsModule } from '../common/_commonjsHelpers-8c19dec8.js';\nimport { c as customQuestionMessage } from '../common/index-42f7c345.js';\nimport { e as events } from '../common/events-7e6d7f3c.js';\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise, SuppressedError, Symbol, Iterator */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nfunction __extends(d, b) {\r\n    if (typeof b !== \"function\" && b !== null)\r\n        throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nfunction __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nfunction __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nfunction __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\r\n    function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\r\n    var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\r\n    var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\r\n    var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\r\n    var _, done = false;\r\n    for (var i = decorators.length - 1; i >= 0; i--) {\r\n        var context = {};\r\n        for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\r\n        for (var p in contextIn.access) context.access[p] = contextIn.access[p];\r\n        context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\r\n        var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\r\n        if (kind === \"accessor\") {\r\n            if (result === void 0) continue;\r\n            if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\r\n            if (_ = accept(result.get)) descriptor.get = _;\r\n            if (_ = accept(result.set)) descriptor.set = _;\r\n            if (_ = accept(result.init)) initializers.unshift(_);\r\n        }\r\n        else if (_ = accept(result)) {\r\n            if (kind === \"field\") initializers.unshift(_);\r\n            else descriptor[key] = _;\r\n        }\r\n    }\r\n    if (target) Object.defineProperty(target, contextIn.name, descriptor);\r\n    done = true;\r\n}\r\nfunction __runInitializers(thisArg, initializers, value) {\r\n    var useValue = arguments.length > 2;\r\n    for (var i = 0; i < initializers.length; i++) {\r\n        value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\r\n    }\r\n    return useValue ? value : void 0;\r\n}\r\nfunction __propKey(x) {\r\n    return typeof x === \"symbol\" ? x : \"\".concat(x);\r\n}\r\nfunction __setFunctionName(f, name, prefix) {\r\n    if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\r\n    return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\r\n}\r\nfunction __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nfunction __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nfunction __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g = Object.create((typeof Iterator === \"function\" ? Iterator : Object).prototype);\r\n    return g.next = verb(0), g[\"throw\"] = verb(1), g[\"return\"] = verb(2), typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (g && (g = 0, op[0] && (_ = 0)), _) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nvar __createBinding = Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    var desc = Object.getOwnPropertyDescriptor(m, k);\r\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\r\n        desc = { enumerable: true, get: function() { return m[k]; } };\r\n    }\r\n    Object.defineProperty(o, k2, desc);\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n});\r\n\r\nfunction __exportStar(m, o) {\r\n    for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\r\n}\r\n\r\nfunction __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nfunction __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\n/** @deprecated */\r\nfunction __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n}\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\nfunction __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nfunction __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = Object.create((typeof AsyncIterator === \"function\" ? AsyncIterator : Object).prototype), verb(\"next\"), verb(\"throw\"), verb(\"return\", awaitReturn), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function awaitReturn(f) { return function (v) { return Promise.resolve(v).then(f, reject); }; }\r\n    function verb(n, f) { if (g[n]) { i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; if (f) i[n] = f(i[n]); } }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nfunction __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nfunction __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nfunction __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n}\r\nvar __setModuleDefault = Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n};\r\n\r\nvar ownKeys = function(o) {\r\n    ownKeys = Object.getOwnPropertyNames || function (o) {\r\n        var ar = [];\r\n        for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;\r\n        return ar;\r\n    };\r\n    return ownKeys(o);\r\n};\r\n\r\nfunction __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== \"default\") __createBinding(result, mod, k[i]);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n}\r\n\r\nfunction __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nfunction __classPrivateFieldGet(receiver, state, kind, f) {\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\r\n    return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\r\n}\r\n\r\nfunction __classPrivateFieldSet(receiver, state, value, kind, f) {\r\n    if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\r\n    if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\r\n    if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\r\n    return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\r\n}\r\n\r\nfunction __classPrivateFieldIn(state, receiver) {\r\n    if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\r\n    return typeof state === \"function\" ? receiver === state : state.has(receiver);\r\n}\r\n\r\nfunction __addDisposableResource(env, value, async) {\r\n    if (value !== null && value !== void 0) {\r\n        if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\r\n        var dispose, inner;\r\n        if (async) {\r\n            if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\r\n            dispose = value[Symbol.asyncDispose];\r\n        }\r\n        if (dispose === void 0) {\r\n            if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\r\n            dispose = value[Symbol.dispose];\r\n            if (async) inner = dispose;\r\n        }\r\n        if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\r\n        if (inner) dispose = function() { try { inner.call(this); } catch (e) { return Promise.reject(e); } };\r\n        env.stack.push({ value: value, dispose: dispose, async: async });\r\n    }\r\n    else if (async) {\r\n        env.stack.push({ async: true });\r\n    }\r\n    return value;\r\n\r\n}\r\n\r\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\r\n\r\nfunction __disposeResources(env) {\r\n    function fail(e) {\r\n        env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\r\n        env.hasError = true;\r\n    }\r\n    var r, s = 0;\r\n    function next() {\r\n        while (r = env.stack.pop()) {\r\n            try {\r\n                if (!r.async && s === 1) return s = 0, env.stack.push(r), Promise.resolve().then(next);\r\n                if (r.dispose) {\r\n                    var result = r.dispose.call(r.value);\r\n                    if (r.async) return s |= 2, Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\r\n                }\r\n                else s |= 1;\r\n            }\r\n            catch (e) {\r\n                fail(e);\r\n            }\r\n        }\r\n        if (s === 1) return env.hasError ? Promise.reject(env.error) : Promise.resolve();\r\n        if (env.hasError) throw env.error;\r\n    }\r\n    return next();\r\n}\r\n\r\nfunction __rewriteRelativeImportExtension(path, preserveJsx) {\r\n    if (typeof path === \"string\" && /^\\.\\.?\\//.test(path)) {\r\n        return path.replace(/\\.(tsx)$|((?:\\.d)?)((?:\\.[^./]+?)?)\\.([cm]?)ts$/i, function (m, tsx, d, ext, cm) {\r\n            return tsx ? preserveJsx ? \".jsx\" : \".js\" : d && (!ext || !cm) ? m : (d + ext + \".\" + cm.toLowerCase() + \"js\");\r\n        });\r\n    }\r\n    return path;\r\n}\r\n\r\nvar tslib_es6 = {\r\n    __extends: __extends,\r\n    __assign: __assign,\r\n    __rest: __rest,\r\n    __decorate: __decorate,\r\n    __param: __param,\r\n    __esDecorate: __esDecorate,\r\n    __runInitializers: __runInitializers,\r\n    __propKey: __propKey,\r\n    __setFunctionName: __setFunctionName,\r\n    __metadata: __metadata,\r\n    __awaiter: __awaiter,\r\n    __generator: __generator,\r\n    __createBinding: __createBinding,\r\n    __exportStar: __exportStar,\r\n    __values: __values,\r\n    __read: __read,\r\n    __spread: __spread,\r\n    __spreadArrays: __spreadArrays,\r\n    __spreadArray: __spreadArray,\r\n    __await: __await,\r\n    __asyncGenerator: __asyncGenerator,\r\n    __asyncDelegator: __asyncDelegator,\r\n    __asyncValues: __asyncValues,\r\n    __makeTemplateObject: __makeTemplateObject,\r\n    __importStar: __importStar,\r\n    __importDefault: __importDefault,\r\n    __classPrivateFieldGet: __classPrivateFieldGet,\r\n    __classPrivateFieldSet: __classPrivateFieldSet,\r\n    __classPrivateFieldIn: __classPrivateFieldIn,\r\n    __addDisposableResource: __addDisposableResource,\r\n    __disposeResources: __disposeResources,\r\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\r\n};\n\nvar tslib_es6$1 = /*#__PURE__*/Object.freeze({\n    __proto__: null,\n    __extends: __extends,\n    get __assign () { return __assign; },\n    __rest: __rest,\n    __decorate: __decorate,\n    __param: __param,\n    __esDecorate: __esDecorate,\n    __runInitializers: __runInitializers,\n    __propKey: __propKey,\n    __setFunctionName: __setFunctionName,\n    __metadata: __metadata,\n    __awaiter: __awaiter,\n    __generator: __generator,\n    __createBinding: __createBinding,\n    __exportStar: __exportStar,\n    __values: __values,\n    __read: __read,\n    __spread: __spread,\n    __spreadArrays: __spreadArrays,\n    __spreadArray: __spreadArray,\n    __await: __await,\n    __asyncGenerator: __asyncGenerator,\n    __asyncDelegator: __asyncDelegator,\n    __asyncValues: __asyncValues,\n    __makeTemplateObject: __makeTemplateObject,\n    __importStar: __importStar,\n    __importDefault: __importDefault,\n    __classPrivateFieldGet: __classPrivateFieldGet,\n    __classPrivateFieldSet: __classPrivateFieldSet,\n    __classPrivateFieldIn: __classPrivateFieldIn,\n    __addDisposableResource: __addDisposableResource,\n    __disposeResources: __disposeResources,\n    __rewriteRelativeImportExtension: __rewriteRelativeImportExtension,\n    'default': tslib_es6\n});\n\nvar WindowMessageEmitter = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\n\n\n// import from directory for tree shaking\nconst custom_question_message_1 = tslib_es6$1.__importDefault(customQuestionMessage);\nconst EVENTS_TO_EMIT = new Set([\n    custom_question_message_1.default.SET_ANSWERS_MSG,\n    custom_question_message_1.default.SET_ANSWER_VALUE_MSG,\n    custom_question_message_1.default.SET_RESPONDER_UUID_MSG,\n    custom_question_message_1.default.SET_SEMANTIC_ANSWER_VALUE_MSG,\n]);\nclass WindowMessageEventsEmitter extends events.EventEmitter {\n    constructor() {\n        super();\n        this.onWindowMessage = (e) => {\n            const { type, payload, requestId } = e.data;\n            if (typeof type !== 'string' ||\n                !EVENTS_TO_EMIT.has(type)) {\n                return;\n            }\n            this.emit(type, payload, requestId);\n        };\n        window.addEventListener('message', this.onWindowMessage);\n    }\n}\nexports.default = WindowMessageEventsEmitter;\n});\n\nvar utils = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.getValueFromWindowParent = exports.sendMessageToWindowParent = exports.getEmitter = void 0;\n\nconst WindowMessageEmitter_1 = tslib_es6$1.__importDefault(WindowMessageEmitter);\nlet emitterSingleton;\nconst getEmitter = () => {\n    if (!emitterSingleton) {\n        emitterSingleton = new WindowMessageEmitter_1.default();\n    }\n    return emitterSingleton;\n};\nexports.getEmitter = getEmitter;\nconst sendMessageToWindowParent = (type, payload, requestId) => {\n    if (window.location === window.parent.location) {\n        throw new Error('Custom questions must run within a Formsort flow custom question to work.');\n    }\n    window.parent.postMessage({\n        type,\n        payload,\n        requestId,\n    }, '*');\n};\nexports.sendMessageToWindowParent = sendMessageToWindowParent;\nconst getValueFromWindowParent = (requestEventType, responseEventType, requestPayload) => {\n    const requestId = Math.random().toString();\n    return new Promise((resolve) => {\n        const onMessage = (value, returningRequestId) => {\n            if (requestId === returningRequestId) {\n                resolve(value); // eslint-disable-line @typescript-eslint/no-unsafe-argument\n                (0, exports.getEmitter)().removeListener(responseEventType, onMessage);\n            }\n        };\n        (0, exports.getEmitter)().on(responseEventType, onMessage);\n        (0, exports.sendMessageToWindowParent)(requestEventType, requestPayload, requestId);\n    });\n};\nexports.getValueFromWindowParent = getValueFromWindowParent;\n});\n\nvar lib = createCommonjsModule(function (module, exports) {\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.setDisableBackNavigation = exports.setAnswerValue = exports.clearAnswerValue = exports.getResponderUuid = exports.getAllAnswerValues = exports.getSemanticAnswerValue = exports.getAnswerValue = exports.setQuestionSize = exports.setAutoHeight = void 0;\n\n// import from directory for tree shaking\nconst custom_question_message_1 = tslib_es6$1.__importDefault(customQuestionMessage);\n\nlet bodyResizeObserver;\nconst setAutoHeight = (enabled) => {\n    if (enabled) {\n        if (!bodyResizeObserver) {\n            bodyResizeObserver = new ResizeObserver(onBodyHeightChanged);\n        }\n        bodyResizeObserver.observe(document.body);\n    }\n    else {\n        if (bodyResizeObserver) {\n            bodyResizeObserver.disconnect();\n            bodyResizeObserver = undefined;\n        }\n    }\n};\nexports.setAutoHeight = setAutoHeight;\nconst onBodyHeightChanged = (entries) => {\n    for (const entry of entries) {\n        if (entry.target === document.body) {\n            const { offsetHeight: height } = document.documentElement;\n            sendResizeMessage(undefined /* width */, `${height}px`);\n        }\n    }\n};\nconst setQuestionSize = (width, height) => {\n    if (bodyResizeObserver) {\n        throw new Error('autoHeight is enabled. To manually size size, call setAutoHeight(false) first.');\n    }\n    sendResizeMessage(width, height);\n};\nexports.setQuestionSize = setQuestionSize;\nconst sendResizeMessage = (width, height) => {\n    (0, utils.sendMessageToWindowParent)(custom_question_message_1.default.SET_QUESTION_SIZE_MSG, {\n        width,\n        height,\n    });\n};\nconst getAnswerValue = () => (0, utils.getValueFromWindowParent)(custom_question_message_1.default.REQUEST_ANSWER_VALUE_MSG, custom_question_message_1.default.SET_ANSWER_VALUE_MSG);\nexports.getAnswerValue = getAnswerValue;\nconst getSemanticAnswerValue = (semanticType) => (0, utils.getValueFromWindowParent)(custom_question_message_1.default.REQUEST_SEMANTIC_ANSWER_VALUE_MSG, custom_question_message_1.default.SET_SEMANTIC_ANSWER_VALUE_MSG, semanticType);\nexports.getSemanticAnswerValue = getSemanticAnswerValue;\nconst getAllAnswerValues = () => (0, utils.getValueFromWindowParent)(custom_question_message_1.default.REQUEST_ANSWERS_MSG, custom_question_message_1.default.SET_ANSWERS_MSG);\nexports.getAllAnswerValues = getAllAnswerValues;\nconst getResponderUuid = () => (0, utils.getValueFromWindowParent)(custom_question_message_1.default.REQUEST_RESPONDER_UUID_MSG, custom_question_message_1.default.SET_RESPONDER_UUID_MSG);\nexports.getResponderUuid = getResponderUuid;\nconst clearAnswerValue = () => {\n    (0, utils.sendMessageToWindowParent)(custom_question_message_1.default.CLEAR_ANSWER_VALUE_MSG);\n};\nexports.clearAnswerValue = clearAnswerValue;\nconst setAnswerValue = (value) => {\n    (0, utils.sendMessageToWindowParent)(custom_question_message_1.default.SET_ANSWER_VALUE_MSG, value);\n};\nexports.setAnswerValue = setAnswerValue;\nconst setDisableBackNavigation = (disable, options) => {\n    (0, utils.sendMessageToWindowParent)(custom_question_message_1.default.SET_DISABLE_BACK_NAVIGATION_MSG, {\n        disable,\n        beforeUnloadMessage: options === null || options === void 0 ? void 0 : options.beforeUnloadMessage,\n    });\n};\nexports.setDisableBackNavigation = setDisableBackNavigation;\n});\n\nvar getAllAnswerValues = lib.getAllAnswerValues;\nvar setAutoHeight = lib.setAutoHeight;\nexport { getAllAnswerValues, setAutoHeight };\n", "import Chart from \"./_snowpack/pkg/chartjs/auto.js\";\nimport {\n\tgetAllAnswerValues,\n\tsetAutoHeight\n} from \"./_snowpack/pkg/@formsort/custom-question-api.js\";\n\n// Need a function that can transform: current weight, goal weight, and weight loss time horizon into a fields for data.datasets.data\nasync function getAllAnswers() {\n\tconst answers = await getAllAnswerValues();\n\tconst values = Object.values(answers);\n\n\tconsole.log(`values: ${values}`);\n}\ngetAllAnswers();\n\nconst options = {\n\tpointStyle: false,\n\tfill: true,\n\tbackgroundColor: \"rgb(229,229,229,0.8)\",\n\tborderColor: \"#00000\",\n\tborderWidth: 3,\n\tscales: {\n\t\tx: {\n\t\t\t// type: \"time\",\n\t\t\tmax: 2,\n\t\t\tlabels: [\"January\", \"February\", \"March\", \"April\", \"May\"],\n\t\t\t// min: \"February\",\n\t\t\tgrid: {\n\t\t\t\tdisplay: false\n\t\t\t},\n\t\t\tticks: {\n\t\t\t\talign: \"start\",\n\t\t\t\tcrossAlign: \"far\",\n\t\t\t\tcount: 2\n\t\t\t}\n\t\t},\n\t\ty: {\n\t\t\tgrid: {\n\t\t\t\tdisplay: false\n\t\t\t},\n\t\t\tticks: {\n\t\t\t\tcount: 2,\n\t\t\t\tcrossAlign: \"near\"\n\t\t\t}\n\t\t}\n\t},\n\tplugins: {\n\t\tlegend: {\n\t\t\tdisplay: false\n\t\t}\n\t}\n};\n\nconst data = {\n\tdatasets: [\n\t\t{\n\t\t\tdata: [300, 300, 200]\n\t\t}\n\t]\n};\n\n(async function () {\n\tconst ctx = document.getElementById(\"data\");\n\n\tnew Chart(ctx, {\n\t\ttype: \"line\",\n\t\tdata: data,\n\t\toptions: options\n\t});\n})();\n"],
  "mappings": "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",
  "names": []
}
